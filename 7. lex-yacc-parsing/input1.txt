global 

    def 
        xabc[12][210], tempDat, finDat1 : string
    end

    def
        x := product
                y, z[20] : nul;
                test : float
            end;
        temp1, temp2[10][11], temp3 : int;
        z : myType;
        r : x := product
                data: float;
                dataTest: int
            end
    end
    
    fun testFunction 
        param1[10], parma2[10][10], param3 : int;
        n : float;
        str : string 
    -> int
        def 
            temp[100]: int
        end
        print "This is Harsh Singh"
    end

    // assignment statements:
    test.a.x := ((a+b).(200/12.2))mod(100*10);
    test.b := (r*s)+(x:y+z, 13*2, 12.2E10*5);

    // read statements:
    read %f 100.2E-9;
    read %s (x: a, b);

    // while statement:
    while (a<=b and not a>z):
        read %d test;
        // loop statement:
        from i:= (r*s+10) to (r*r) step 10 :
            test:=test+1;
            // if statement:
            if ((i mod 2)=0): 
                // print statement:
                print "#EVEN"
            else
                print "#ODD"
            end   
        end;
        // call statement:
        (myFun: param1, parma2, param3, n, str);
        if test=100:
            // exit loop statement
           exit 
        end;
        // skip statement:
        skip
    end;

    // return statement
    return data1+data2
end